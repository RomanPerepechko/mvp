#!/bin/bash

# üöÄ AI Tools Aggregator - Production Deployment Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π CLI-–ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ -z "$SERVER_HOST" ]; then
        error "SERVER_HOST –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–∏–º–µ—Ä: export SERVER_HOST=your-server.com"
    fi
    
    if [ -z "$SERVER_USER" ]; then
        error "SERVER_USER –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–∏–º–µ—Ä: export SERVER_USER=ubuntu"
    fi
    
    log "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    command -v git >/dev/null 2>&1 || error "Git –Ω–µ –Ω–∞–π–¥–µ–Ω"
    command -v ssh >/dev/null 2>&1 || error "SSH –Ω–µ –Ω–∞–π–¥–µ–Ω"
    command -v rsync >/dev/null 2>&1 || error "rsync –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
build_project() {
    log "–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    pnpm install
    
    # –°–±–æ—Ä–∫–∞ shared –ø–∞–∫–µ—Ç–∞
    pnpm --filter shared run build
    
    # –°–±–æ—Ä–∫–∞ parser –ø–∞–∫–µ—Ç–∞
    pnpm --filter parser run build
    
    log "‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω"
}

# –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä
deploy_to_server() {
    log "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ $SERVER_HOST..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    ssh "$SERVER_USER@$SERVER_HOST" "mkdir -p /opt/ai-tools-aggregator"
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
    log "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤..."
    rsync -avz --delete \
        --exclude node_modules \
        --exclude .git \
        --exclude '*.log' \
        --exclude packages/parser/dev.db \
        --exclude packages/parser/prisma/dev.db \
        ./ "$SERVER_USER@$SERVER_HOST:/opt/ai-tools-aggregator/"
    
    # –£–¥–∞–ª–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    ssh "$SERVER_USER@$SERVER_HOST" << 'EOF'
        cd /opt/ai-tools-aggregator
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –∏ pnpm –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        command -v node >/dev/null 2>&1 || {
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
        }
        
        command -v pnpm >/dev/null 2>&1 || {
            npm install -g pnpm
        }
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        pnpm install --frozen-lockfile
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if [ ! -f .env ]; then
            cp env.production.example .env
            echo "‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!"
        fi
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞
        pnpm db:generate
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        sudo tee /etc/systemd/system/ai-tools-parser.service > /dev/null << 'SERVICE'
[Unit]
Description=AI Tools Parser CLI
After=network.target

[Service]
Type=oneshot
User=ubuntu
WorkingDirectory=/opt/ai-tools-aggregator
ExecStart=/usr/bin/pnpm parser crawl futuretools
Environment=NODE_ENV=production

[Install]
WantedBy=multi-user.target
SERVICE

        sudo systemctl daemon-reload
        
        echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
        echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
        echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª: nano /opt/ai-tools-aggregator/.env"
        echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL: docker-compose -f docker-compose.prod.yml up -d"
        echo "3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—ã: pnpm db:push"
        echo "4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: pnpm parser demo"
EOF
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π AI Tools Aggregator"
    
    check_env
    check_dependencies
    build_project
    deploy_to_server
    
    log "üéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    log "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É: ssh $SERVER_USER@$SERVER_HOST"
    log "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: cd /opt/ai-tools-aggregator"
}

# –°–ø—Ä–∞–≤–∫–∞
show_help() {
    echo "AI Tools Aggregator - Deployment Script"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  export SERVER_HOST=your-server.com"
    echo "  export SERVER_USER=ubuntu"
    echo "  ./deploy.sh"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -h, --help    –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  SERVER_HOST=192.168.1.100 SERVER_USER=root ./deploy.sh"
    echo "  SERVER_HOST=my-vps.com SERVER_USER=ubuntu ./deploy.sh"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    -h|--help)
        show_help
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac 