#!/bin/bash

# üöÄ AI Tools API - –ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ–¥–µ–ø–ª–æ–π —Å–∫—Ä–∏–ø—Ç
# –û–¥–∏–Ω —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –¥–µ–ø–ª–æ—è API
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./auto-deploy.sh

set -e

SERVER_HOST="146.103.99.64"
SERVER_USER="root"
SERVER_PASS="a=NxQW25GF=B7L7pv#X5"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"; }
warn() { echo -e "${YELLOW}[WARNING] $1${NC}"; }
error() { echo -e "${RED}[ERROR] $1${NC}"; exit 1; }
info() { echo -e "${BLUE}[INFO] $1${NC}"; }

run_remote() {
    local command="$1"
    local timeout="${2:-60}"
    
    expect -c "
        set timeout $timeout
        spawn ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST \"$command\"
        expect \"password:\"
        send \"$SERVER_PASS\r\"
        expect eof
    " 2>/dev/null
}

check_health() {
    local url="$1"
    local retries=10
    local delay=3
    
    for i in $(seq 1 $retries); do
        if curl -s "$url" > /dev/null 2>&1; then
            return 0
        fi
        sleep $delay
    done
    return 1
}

wait_for_db() {
    log "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    local retries=20
    local delay=5
    
    for i in $(seq 1 $retries); do
        if run_remote "cd /opt/ai-tools-aggregator && pnpm db:push" > /dev/null 2>&1; then
            log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞"
            return 0
        fi
        info "–ü–æ–ø—ã—Ç–∫–∞ $i/$retries... –æ–∂–∏–¥–∞–Ω–∏–µ $delay —Å–µ–∫"
        sleep $delay
    done
    error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞ –ø–æ—Å–ª–µ $((retries * delay)) —Å–µ–∫—É–Ω–¥"
}

main() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π –∞–≤—Ç–æ–¥–µ–ø–ª–æ–π AI Tools API"
    
    # –≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    log "üìã –≠—Ç–∞–ø 1/8: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞..."
    
    if ! command -v expect &> /dev/null; then
        error "expect –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install expect (macOS) –∏–ª–∏ apt-get install expect (Linux)"
    fi
    
    # –≠—Ç–∞–ø 2: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    log "üõë –≠—Ç–∞–ø 2/8: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    run_remote "pkill -f 'node dist/index.js' || echo 'No API processes to kill'"
    run_remote "docker kill \$(docker ps -q) 2>/dev/null || echo 'No containers to kill'"
    run_remote "docker rm \$(docker ps -aq) 2>/dev/null || echo 'No containers to remove'"
    
    # –≠—Ç–∞–ø 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    log "üì• –≠—Ç–∞–ø 3/8: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ Git..."
    run_remote "cd /opt/ai-tools-aggregator && git fetch origin"
    run_remote "cd /opt/ai-tools-aggregator && git reset --hard origin/main"
    run_remote "cd /opt/ai-tools-aggregator && git clean -fd"
    
    # –≠—Ç–∞–ø 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–±–æ—Ä–∫–∞
    log "üî® –≠—Ç–∞–ø 4/8: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ —Å–±–æ—Ä–∫–∞..."
    run_remote "cd /opt/ai-tools-aggregator && pnpm install --frozen-lockfile" 120
    run_remote "cd /opt/ai-tools-aggregator && pnpm --filter shared run build" 60
    run_remote "cd /opt/ai-tools-aggregator && pnpm --filter api run build" 60
    
    # –≠—Ç–∞–ø 5: –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    log "üóÑÔ∏è –≠—Ç–∞–ø 5/8: –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    run_remote "cd /opt/ai-tools-aggregator && docker-compose -f docker-compose.prod.yml up -d db" 180
    
    # –≠—Ç–∞–ø 6: –û–∂–∏–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    log "‚è≥ –≠—Ç–∞–ø 6/8: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    wait_for_db
    
    # –≠—Ç–∞–ø 7: –ó–∞–ø—É—Å–∫ API
    log "üöÄ –≠—Ç–∞–ø 7/8: –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞..."
    run_remote "cd /opt/ai-tools-aggregator/apps/api && nohup node dist/index.js > /tmp/api.log 2>&1 &"
    
    # –≠—Ç–∞–ø 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
    log "üß™ –≠—Ç–∞–ø 8/8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
    
    if check_health "http://$SERVER_HOST:3001/health"; then
        log "‚úÖ Health check: OK"
    else
        error "Health check –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è"
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    log "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤..."
    
    # Test resolve-url endpoint
    if curl -X POST "http://$SERVER_HOST:3001/api/tools/resolve-url" \
       -H "Content-Type: application/json" \
       -d '{"url":"https://github.com"}' \
       -s | jq -e '.finalUrl' > /dev/null 2>&1; then
        log "‚úÖ resolve-url —ç–Ω–¥–ø–æ–∏–Ω—Ç: OK"
    else
        warn "‚ö†Ô∏è resolve-url —ç–Ω–¥–ø–æ–∏–Ω—Ç: –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã"
    fi
    
    # Test demo endpoint  
    if curl -s "http://$SERVER_HOST:3001/api/tools/demo" | jq -e '.items' > /dev/null 2>&1; then
        log "‚úÖ demo —ç–Ω–¥–ø–æ–∏–Ω—Ç: OK"
    else
        warn "‚ö†Ô∏è demo —ç–Ω–¥–ø–æ–∏–Ω—Ç: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è"
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    log "üéâ –ê–≤—Ç–æ–¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    info "üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    info "üåê API: http://$SERVER_HOST:3001"
    info "üîç Health: http://$SERVER_HOST:3001/health"
    info "üõ†Ô∏è Tools: http://$SERVER_HOST:3001/api/tools"
    info "üÜï Resolve URL: POST http://$SERVER_HOST:3001/api/tools/resolve-url"
    echo ""
    info "üìù –õ–æ–≥–∏ API: ssh root@$SERVER_HOST 'tail -f /tmp/api.log'"
    info "üê≥ Docker —Å—Ç–∞—Ç—É—Å: ssh root@$SERVER_HOST 'docker ps'"
    echo ""
    log "‚ú® –ì–æ—Ç–æ–≤–æ! API –æ–±–Ω–æ–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    -h|--help)
        echo "AI Tools API - –ê–≤—Ç–æ–¥–µ–ø–ª–æ–π —Å–∫—Ä–∏–ø—Ç"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./auto-deploy.sh"
        echo ""
        echo "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:"
        echo "  1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
        echo "  2. –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Git"
        echo "  3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç"
        echo "  4. –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
        echo "  5. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ö–µ–º—É –ë–î"
        echo "  6. –ó–∞–ø—É—Å–∫–∞–µ—Ç API —Å–µ—Ä–≤–µ—Ä"
        echo "  7. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"
        echo ""
        echo "–û–ø—Ü–∏–∏:"
        echo "  -h, --help    –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac